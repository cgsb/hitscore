#! /bin/sh

OCAMLFINDOPT='ocamlfind ocamlopt -syntax camlp4o -thread -package hitscore,sexplib.syntax'

make_module () {

    local name=_migrator/$1.ml
    local tag=v${2}-dev
    local version=$2
    local tmp=/tmp/mmm.ml
    git checkout $tag
    if [ $? -ne 0 ] ; then
        git checkout v$version
        if [ $? -ne 0 ] ; then
            echo "Can't checkout $tag nor v$version"
            exit 1
        fi
    fi

    rm -fr _build/src/codegen $name $tmp
    ocamlbuild src/codegen/hitscoregen.native

    echo "Writing to $tmp"
    _build/src/codegen/hitscoregen.native codegen-ocaml data/hitscore_layout $tmp

    echo "module Info = struct let version = \"$version\" end" >> $name
    echo "module Hitscore_std = struct" >> $name
    cat src/lib/hitscore_std.ml >> $name
    echo "end" >> $name
    echo "module Hitscore_db_backend = struct" >> $name
    cat src/lib/hitscore_db_backend.ml >> $name
    echo "end" >> $name
    cat $tmp >> $name

    $OCAMLFINDOPT -c $name
    
}


if [ "$1" = "update" ]; then
    mkdir -p _migrator
    current_branch=`git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' \
                      -e 's/* \(.*\)/\1/'`
    make_module v11 1.1
    make_module v12 1.2
    make_module v13 1.3
    git checkout $current_branch
    cd _migrator
    ln -sf ../src/migrator/migrator.ml
    cd ..
fi

if [ "$1" = "-h" ]; then
    printf  "usage: $0        \n   Build the current migrator in _migrator/.\n"
    printf  "usage: $0 update \n   Update the generated code in _migrator/ and build.\n"
    printf  "   (will fail if there are uncommitted/unstashed changes)\n"
    exit 0
fi

cd _migrator
$OCAMLFINDOPT -linkpkg v11.cmx v12.cmx v13.cmx migrator.ml -o migrator
cd ..

