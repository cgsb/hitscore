#! /bin/sh

case $1 in
    ""|"-h"|"-help"|"--help")
        echo "usage: ./bin/hsocaml <profile> [<ml-file>]"
        exit 2;;
    *)
        ;;
esac
profile="$1"
  
file_to_use=/tmp/hsocaml.ml

cat <<EOF > $file_to_use

#use "topfind"
#thread
#require "lwt.unix"
#require "lwt.top"
#require "threads, core, pgocaml, sexplib.syntax, biocaml, sequme, cryptokit, simple_pam"
#directory "_build/src/codegen"
#directory "_build/src/lib"
#load "hitscoregen.cma"
#load "hitscore.cma"

open Core.Std
open Hitscore
let () = printf "--> Open Core.Std\n"
let () = printf "--> open Hiscore\n"
open Sequme_flow
open Sequme_flow_list
open Sequme_flow_sys
let () = printf "--> Open Flow (sys,list)\n"

let default_config () =
  sprintf "$HOME/.config/hitscore/config.sexp"

let configuration =
  let config_file, profile_name =
    match String.split "$profile" ~on:':' with
    | [ one ] ->
      (default_config (), one)
    | [ one; two ] ->
      (one, two)
    | _ -> failwithf "Can't understand: %s" "$profile" ()
  in
  let config = In_channel.(with_file config_file ~f:input_all) in
  let hitscore_config =
    Configuration.(
    match Result.(parse_str config >>= fun c -> use_profile c "$profile") with
    | Ok c -> c
    | Error (\`configuration_parsing_error e) ->
      eprintf "Error while parsing configuration: %s\n" (Exn.to_string e);
      failwith "STOP"
    | Error (\`profile_not_found s) ->
      eprintf "Profile %S not found in config-file\n" s;
      failwith "STOP")
   in
   hitscore_config
let () = printf "--> configuration\n"

let ok_exn m =
  match Lwt_main.run m with
| Ok o -> o
| Error e -> failwith "NOT OK!"
let () = printf "--> ok_exn (Lwt)\n"

let () = printf "END INIT\n\n"
EOF

ocaml_init=/tmp/ocaml_init_hs.ml

cat <<EOF > $ocaml_init

#use "topfind";;

Toploop.use_silently Format.err_formatter "$file_to_use";;

EOF

if [ -f "$2" ]; then
  echo "Adding $2"
  cat $2 >> $ocaml_init
fi

if [ -t 1 ] ; then
    ledit ocaml -init $ocaml_init 
else
    ocaml -init $ocaml_init 
fi

